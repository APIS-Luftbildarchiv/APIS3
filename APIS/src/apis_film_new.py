# -*- coding: utf-8 -*-
"""
/***************************************************************************
 APISDialog
                                 A QGIS plugin
 APIS - Archaeological Prospection Information System - A QGIS Plugin
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-04-10
        git sha              : $Format:%H$
        copyright            : (C) 2018 by Johannes Liem (digitalcartography.org) and Aerial Archive of the University of Vienna
        email                : johannes.liem@digitalcartography.org
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5.uic import loadUiType
from PyQt5.QtWidgets import QDialog
from PyQt5.QtCore import QDate

FORM_CLASS, _ = loadUiType(os.path.join(
    os.path.dirname(os.path.dirname(__file__)), 'ui', 'apis_film_new.ui'), resource_suffix='')


class APISFilmNew(QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(APISFilmNew, self).__init__(parent)

        self.setupUi(self)

    def flightDate(self):
        return self.uiFlightDate.date()

    def useLastEntry(self):
        return self.uiUseLastEntryChk.isChecked()

    def producer(self):
        return self.uiProducerCombo.currentText()

    def producerCode(self):
        editor = self.uiProducerCombo
        idx = editor.model().createIndex(editor.currentIndex(), editor.model().fieldIndex("id"))
        return str(editor.model().data(idx))

    def showEvent(self, evnt):
        self.uiFlightDate.setDate(QDate.currentDate())
